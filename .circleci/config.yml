version: 2
jobs:
  build:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create Docker volumes
          command: |
            docker create --name input --volume /home/builder/package alpine:3.6 /bin/true
            docker create --name output --volume /packages alpine:3.6 /bin/true
            docker cp ./APKBUILD input:/home/builder/package
      - run:
          name: Build packages
          command: |
            docker run --volumes-from input --volumes-from output sgerrand/alpine-abuild
      - run:
          name: Extract packages
          command: |
            mkdir -p packages
            docker cp output:/packages/builder packages/
      - run: docker run --interactive --tty --volumes-from output alpine:3.3 sh -c "cp /packages/sgerrand.rsa.pub /etc/apk/keys/ && apk add --no-progress --update-cache --upgrade /packages/builder/x86_64/*.apk"
      - run: docker run --interactive --tty --volumes-from output alpine:3.4 sh -c "cp /packages/sgerrand.rsa.pub /etc/apk/keys/ && apk add --no-progress --update-cache --upgrade /packages/builder/x86_64/*.apk"
      - run: docker run --interactive --tty --volumes-from output alpine:3.5 sh -c "cp /packages/sgerrand.rsa.pub /etc/apk/keys/ && apk add --no-progress --update-cache --upgrade /packages/builder/x86_64/*.apk"
      - run: docker run --interactive --tty --volumes-from output alpine:3.6 sh -c "cp /packages/sgerrand.rsa.pub /etc/apk/keys/ && apk add --no-progress --update-cache --upgrade /packages/builder/x86_64/*.apk"
      - persist_to_workspace:
          root: packages
          paths:
            - **/*
      - run:
          name: Remove Docker volumes
          command: |
            docker rm input
            docker rm output
          when: always
      - store_artifacts:
          destination: pkgs
          path: packages
    working_directory: ~/alpine-pkg-leiningen
  deploy-tagged-release:
    docker:
      - image: golang:latest
    steps:
      - run: go get github.com/tcnksm/ghr
      - attach_workspace:
          at: packages
      - run:
          name: Upload tagged release to GitHub
          command: |
            ghr -u sgerrand $CIRCLE_TAG packages/
            ghr -u sgerrand $CIRCLE_TAG packages/builder/x86_64
    working_directory: ~/alpine-pkg-leiningen
  deploy-prerelease:
    docker:
      - image: golang:latest
    steps:
      - run: go get github.com/tcnksm/ghr
      - attach_workspace:
          at: packages
      - run:
          name: Upload tagged release to GitHub
          command: |
            ghr -u sgerrand --prerelease --delete unreleased packages
            ghr -u sgerrand --prerelease unreleased packages/builder/x86_64
    working_directory: ~/alpine-pkg-leiningen
workflows:
  version: 2
  build-then-release:
    jobs:
      - build
      - deploy-prerelease:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-prerelease:
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                - master
      - deploy-tagged-release:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+){1,2}(\-r\d+)?$/
            branches:
              ignore: /.*/
